{
  "name": "couch-compile",
  "version": "1.2.0",
  "description": "Build CouchDB documents from fs.",
  "main": "index.js",
  "bin": {
    "couch-compile": "./cli.js"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/jo/couch-compile"
  },
  "keywords": [
    "couchdb",
    "couchapp"
  ],
  "author": {
    "name": "Johannes J. Schmidt"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/jo/couch-compile/issues"
  },
  "homepage": "https://github.com/jo/couch-compile",
  "dependencies": {
    "mime": "^1.2.11",
    "async": "^0.2.10",
    "glob": "^3.2.11"
  },
  "devDependencies": {
    "tap": "~0.4.8"
  },
  "gitHead": "5f33b32674450cf769c0ca2aa51b384394c1d957",
  "readme": "# couch-compile\nBuild CouchDB documents from directory, JSON or module.\n\n[![Build Status](https://travis-ci.org/jo/couch-compile.svg?branch=master)](http://travis-ci.org/jo/couch-compile)\n\n```js\nvar compile = require('couch-compile');\ncompile('/my/couch/app', function(err, doc) {\n  // push\n});\n```\n\n## Usage\n`compile(directory, [options], callback)`\n\n### `Options`\nWhen `options.multipart` is true, attachments are handled as multipart.\n\nIf you populate options.ignoreFiles, it will ignore the contents of a .couchappignore file. This is useful in\n[grunt-couch](https://github.com/jo/grunt-couch)\n\n    var ignoreFiles = grunt.file.read('.couchappignore')\n    var ignoreFilesArr = ignoreFiles.split('\\n')\n    options.ignoreFiles = ignoreFilesArr;\n\n### `callback`\n`callback` is called with two arguments: `error` and `doc`.\nIn case `options.multipart` is set, `callback` is called with a third argument:\n`attachments`. This is a multipart attachments array as required by\n[nanos `db.multipart.insert`](https://github.com/dscape/nano#dbmultipartinsertdoc-attachments-params-callback):\n```js\n{\n  name: 'rabbit.png',\n  content_type: 'image/png',\n  data: <Buffer>\n}\n```\n`data` can be a `Buffer` or a `String`.\n\n\n## CLI\nA simple commandline client is included:\n```shell\nnpm install -g couch-compile\n```\n\nGive it a directory, or use the current one:\n```shell\ncouch-compile /my/couch/app\n```\n\n\n## The Couch Directory Tree\n`couch-compile` uses a filesystem mapping similar to [Couchapp python tool](http://couchapp.org/page/couchapp-python)\nand [Erika](https://github.com/benoitc/erica):\n[The Couchapp Filesystem Mapping](http://couchapp.org/page/filesystem-mapping).\n\nIt is quite self-explanatory. For example:\n\n```shell\nmyapp\n├── _id\n├── language\n└── views\n    └── numbers\n        ├── map.js\n        └── reduce.js\n```\n\nbecomes:\n```json\n{\n  \"_id\": \"_design/myapp\",\n  \"language\": \"javascript\",\n  \"views\": {\n    \"numbers\": {\n      \"map\": \"function...\",\n      \"reduce\": \"function...\"\n    }\n  }\n}\n```\n\nSee `test/fixtures` and `test/expected` for usage examples.\n\n### File Extensions\nFor property names file extensions will be stripped:\n\n```js\n{\n  \"validate_doc_update\": \"content of validate_doc_update.js\",\n}\n```\n\n### Attachments\nFiles inside the `\\_attachments` directory are handled special:\nThey become attachment entries of the form\n\n```js\n{\n  \"a/file.txt\": {\n    \"data\": \"SGVsbG8gV29ybGQhCg==\",\n    \"content_type\": \"text/plain\"\n  }\n}\n```\n\nThe `content\\_type` is computed using [mime](https://github.com/broofa/node-mime).\n`data` is the base64 encoded value of the file.\n\nRead more about [Inline Attachments](http://wiki.apache.org/couchdb/HTTP_Document_API#Inline_Attachments).\n\n\n## Testing\nRun the testsuite with\n```shell\nnpm test\n```\n\n(c) 2014 Johannes J. Schmidt, TF  \nMIT License\n",
  "readmeFilename": "README.md",
  "_id": "couch-compile@1.2.0",
  "_shasum": "52a8aa1c9ab56fd8f3b9a733c23195b68bc08122",
  "_from": "../../../../var/folders/2l/y3fsns0x18j4wl50th891cd40000gq/T/npm-12957-d0e9da09/git-cache-25ea9bc7d8e5/5f33b32674450cf769c0ca2aa51b384394c1d957",
  "_resolved": "git+https://github.com/chrisekelley/couch-compile#5f33b32674450cf769c0ca2aa51b384394c1d957"
}
